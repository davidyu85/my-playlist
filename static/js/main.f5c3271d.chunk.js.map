{"version":3,"sources":["components/TitleBar.tsx","Contexts.tsx","components/MovieList.tsx","components/SearchPage.tsx","components/PlayListPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TitleBar","styled","div","ScreenButton","NavLink","ContextPlayList","createContext","playList","setPlayList","MovieListWrapper","MovieBlock","MovieTitle","MarkInPlayList","MovieList","list","onClickMovieBlock","useContext","map","movie","onClick","imdbID","Poster","src","alt","Title","SearchBar","SearchInput","input","SearchButton","button","NoResult","span","SearchPage","searchInput","useRef","useState","keyword","page","search","setSearch","movies","setMovies","useEffect","axios","then","data","Search","to","current","value","aria-label","size","ref","onKeyPress","e","key","target","placeholder","newPlayList","length","NoList","Heading","h3","Background","props","bgColor","PlayListPage","playListObjToArray","Object","values","myColor","Footer","App","contextValuePlayList","useMemo","Provider","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5c3271d.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const TitleBar = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #500;\n  color: #fff;\n  padding: 0;\n  width: 100%;\n  z-index: 100;\n`;\n\nexport const ScreenButton = styled(NavLink)`\n  background-color: #a00;\n  color: white;\n  padding: 1.5rem 1rem;\n  width: 6rem;\n  text-align: center;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    background-color: #c00;\n    outline: 0 !important;\n  }\n`;","import { createContext, Dispatch, SetStateAction } from 'react';\nimport { Movie } from './components/MovieList';\n\ninterface ContextPlayListObj {\n  playList: Record<string, Movie>;\n  setPlayList: Dispatch<SetStateAction<Record<string, Movie>>>;\n}\n\nexport const ContextPlayList = createContext({\n  playList: {},\n  setPlayList: () => {},\n} as ContextPlayListObj);","import { ReactElement, useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { ContextPlayList } from '../Contexts';\n\nconst MovieListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  width: calc(100% - 4rem);\n  padding: 5rem 1.5rem 1.5rem 1.5rem;\n\n  @media (min-width: 600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst MovieBlock = styled.div`\n  position: relative;\n  background-color: #333;\n  color: #fff;\n  margin: .75rem;\n  width: 12rem;\n  height: 17rem;\n  overflow: hidden;\n  text-align: left;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n\n  &:hover {\n    box-shadow: 0 0 1rem 1rem rgba(255, 0, 0, .3);\n  }\n`;\n\nconst MovieTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n\n  background-color: rgba(40, 0, 0, .75);\n  width: 10rem;\n  padding: 1rem;\n  margin: 0;\n\n  font-size: 13px;\n`;\n\nconst MarkInPlayList = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  font-size: 9px;\n  padding: .25rem;\n\n  color: #fff;\n  background-color: rgba(255, 200, 0 ,.5);\n`;\n\nexport interface Movie {\n  // List of properties from OMDb API.\n  // TODO: This should be listed out or find an already provided version.\n  [key: string]: string;\n}\ninterface MovieListProps {\n  // Array of \"Search\" object from OMDb.\n  list: Movie[];\n  // Enable clicking on the movie block to do something.\n  onClickMovieBlock?: (movie: Movie) => void;\n}\n\n/**\n * Show the list of movies.\n * @param MovieListProps\n * @returns ReactElement\n */\nconst MovieList = ({ list = [], onClickMovieBlock = () => {} }: MovieListProps): ReactElement => {\n  const { playList } = useContext(ContextPlayList);\n\n  return (\n    <MovieListWrapper>\n      {list.map((movie: Movie): ReactElement => (\n        <MovieBlock key={movie.imdbID} onClick={() => onClickMovieBlock(movie)}>\n          {playList[movie.imdbID] && <MarkInPlayList>In playlist</MarkInPlayList>}\n          {movie.Poster && <img src={movie.Poster} alt=\"\" />}\n          <MovieTitle>{movie.Title}</MovieTitle>\n        </MovieBlock>\n      ))}\n    </MovieListWrapper>\n  );\n}\n\nexport default MovieList;","import { useEffect, useState, useRef, useContext, KeyboardEvent, ReactElement } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { MdSearch } from 'react-icons/md';\n\nimport { TitleBar, ScreenButton } from './TitleBar';\nimport MovieList, { Movie } from './MovieList';\nimport { ContextPlayList } from '../Contexts';\n\nconst omdbApiKey = 'bce2b2d3';\n\nconst SearchBar = styled.div`\n  width: 100%;\n  margin: 1rem 1.5rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchInput = styled.input`\n  width: calc(100% - 50px);\n  border: 0;\n  border-radius: 0;\n  background-color: #800;\n  padding: 0.5rem 0.2rem;\n  margin: 0;\n  color: #fff;\n\n  &:focus {\n    outline: 0 !important;\n  }\n\n  &::placeholder {\n    color: #c88;\n  }\n`;\n\nconst SearchButton = styled.button`\n  background-color: #800;\n  border: 0;\n  border-radius: 0;\n  padding: 0.2rem .5rem;\n  margin: 0;\n  color: white;\n`;\n\nconst NoResult = styled.span`\n  color: #fff;\n  padding: 1rem;\n`;\n\n/**\n * Page searching movies from OMDb.\n * @returns ReactElement\n */\nconst SearchPage = (): ReactElement => {\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  const [search, setSearch] = useState<{ keyword: string, page: number }>({ keyword: 'aaa', page: 1 });\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const { playList, setPlayList } = useContext(ContextPlayList);\n\n  useEffect(() => {\n    axios(`https://www.omdbapi.com/?s=${search.keyword}&apikey=${omdbApiKey}&page=${search.page}`)\n      .then(({ data }) => {\n        setMovies(data.Search);\n      });\n  }, [search]);\n\n  const searchMovie = () => {\n    setSearch({ keyword: (searchInput.current as HTMLInputElement)?.value, page: 1 })\n  };\n\n  const searchMovieByEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      setSearch({ keyword: (e.target as HTMLInputElement).value, page: 1 })\n    }\n  };\n\n  const toggleToPlaylist = (movie: Movie) => {\n    const newPlayList = { ...playList};\n    if (newPlayList[movie.imdbID]) {\n      delete newPlayList[movie.imdbID];\n    } else {\n      newPlayList[movie.imdbID] = movie;\n    }\n    setPlayList(newPlayList);\n  }\n\n  return (\n      <>\n        <TitleBar>\n          <ScreenButton to=\"playlist\">\n            Playlist\n          </ScreenButton>\n\n          <SearchBar>\n            <SearchButton onClick={searchMovie} aria-label=\"Search\">\n              <MdSearch size={21} />\n            </SearchButton>\n            <SearchInput\n              ref={searchInput}\n              onKeyPress={searchMovieByEnter}\n              aria-label=\"Enter keyword\"\n              placeholder=\"Enter keyword - minimum 3 characters\"\n            />\n          </SearchBar>\n        </TitleBar>\n\n        <MovieList list={movies} onClickMovieBlock={toggleToPlaylist} />\n\n        {movies && movies.length === 0 && <NoResult>Search no results.</NoResult>}\n        {search.keyword.length < 3 && <NoResult>Minimum 3 characters required for search to proceed.</NoResult>}\n      </>\n  );\n};\n\nexport default SearchPage;","import { useContext, ReactElement } from 'react';\nimport styled from 'styled-components';\n\nimport { TitleBar, ScreenButton } from './TitleBar';\nimport MovieList from './MovieList';\nimport { ContextPlayList } from '../Contexts';\n\nconst NoList = styled.span`\n  color: #fff;\n  padding: 1rem;\n`;\n\nconst Heading = styled.h3`\n  padding: 0 2rem;\n  font-weight: 400;\n`;\n\nconst Background = styled.div`\n  position: fixed;\n  background-color: ${(props: PlayListPageProps) => props.bgColor || '#000'};\n  height: 100vh;\n  width: 100vw;\n`\n\ninterface PlayListPageProps {\n  // Favorite background color.\n  bgColor?: string;\n}\n\n/**\n * Confirmed playlist of movies.\n * @returns ReactElement\n */\nconst PlayListPage = ({ bgColor }: PlayListPageProps): ReactElement => {\n  const { playList } = useContext(ContextPlayList);\n\n  const playListObjToArray = Object.values(playList);\n\n  return (\n    <>\n      <TitleBar>\n        <ScreenButton to=\"/\">\n          Search\n        </ScreenButton>\n        <Heading>My playlist</Heading>\n      </TitleBar>\n      <Background bgColor={bgColor} />\n\n      <MovieList list={playListObjToArray} />\n\n      {playListObjToArray.length === 0 && <NoList>Playlist is empty</NoList>}\n    </>\n  );\n};\n\nexport default PlayListPage;","import { useState, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport { Movie } from './components/MovieList';\nimport SearchPage from './components/SearchPage';\nimport PlayListPage from './components/PlayListPage';\nimport { ContextPlayList } from './Contexts';\n\nconst myColor = 'maroon';\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  background-color: #600;\n  color: #faa;\n  width: 100%;\n  margin: 0;\n  padding: 0.5rem;\n`;\n\nfunction App() {\n  const [playList, setPlayList] = useState<Record<string, Movie>>({});\n  const contextValuePlayList = useMemo(() => ({ playList, setPlayList }), [playList]);\n\n  return (\n    <ContextPlayList.Provider value={contextValuePlayList}>\n      <Routes>\n        <Route path=\"/\" element={<SearchPage />} />\n        <Route path=\"/playlist\" element={<PlayListPage bgColor={myColor} />} />\n      </Routes>\n      <Footer>\n        My favorite color is {myColor}.\n      </Footer>\n    </ContextPlayList.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}