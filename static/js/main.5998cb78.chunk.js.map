{"version":3,"sources":["components/MovieList.tsx","components/SearchPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MovieListWrapper","styled","div","MovieBlock","MovieTitle","MovieList","list","map","movie","Poster","src","alt","Title","imdbID","TitleBar","SearchBar","SearchInput","input","SearchButton","button","PlayListButton","SearchPage","searchInput","useRef","useState","keyword","page","search","setSearch","movies","setMovies","useEffect","axios","then","data","Search","ref","onKeyPress","e","key","target","value","aria-label","onClick","current","Footer","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAWMA,EAAmBC,IAAOC,IAAV,6OAahBC,EAAaF,IAAOC,IAAV,sSAmBVE,EAAaH,IAAOC,IAAV,6JAqBDG,EAXG,SAAC,GAAD,QAAGC,YAAH,MAAU,GAAV,SAChB,cAACN,EAAD,UACGM,EAAKC,KAAI,SAACC,GAAD,OACR,eAACL,EAAD,WACGK,EAAMC,QAAU,qBAAKC,IAAKF,EAAMC,OAAQE,IAAI,KAC7C,cAACP,EAAD,UAAaI,EAAMI,UAFJJ,EAAMK,cC/CvBC,EAAWb,IAAOC,IAAV,6JASRa,EAAYd,IAAOC,IAAV,8GAOTc,EAAcf,IAAOgB,MAAV,2MAaXC,EAAejB,IAAOkB,OAAV,gIAQZC,EAAiBnB,IAAOkB,OAAV,wOA0DLE,EA3CI,WACjB,IAAMC,EAAcC,iBAAyB,MADtB,EAGKC,mBAA4C,CAAEC,QAAS,MAAOC,KAAM,IAHzE,mBAGhBC,EAHgB,KAGRC,EAHQ,OAIKJ,mBAAkB,IAJvB,mBAIhBK,EAJgB,KAIRC,EAJQ,KAMvBC,qBAAU,WACRC,IAAM,8BAAD,OAA+BL,EAAOF,QAAtC,mBA7DU,WA6DV,iBAA2EE,EAAOD,OACpFO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPJ,EAAUI,EAAKC,aAElB,CAACR,IAYJ,OACI,qCACE,eAACb,EAAD,WACE,cAACM,EAAD,0BAIA,eAACL,EAAD,WACE,cAACC,EAAD,CAAaoB,IAAKd,EAAae,WAdd,SAACC,GACZ,UAAVA,EAAEC,KACJX,EAAU,CAAEH,QAAUa,EAAEE,OAA4BC,MAAOf,KAAM,KAYIgB,aAAW,kBAC1E,cAACxB,EAAD,CAAcyB,QAnBJ,WAAO,IAAD,EACxBf,EAAU,CAAEH,QAAO,UAAGH,EAAYsB,eAAf,aAAE,EAA2CH,MAAOf,KAAM,KAkBjCgB,aAAW,SAA/C,SACE,cAAC,IAAD,YAKN,cAAC,EAAD,CAAWpC,KAAMuB,QC3FnBgB,EAAS5C,IAAOC,IAAV,6KAwBG4C,MAbf,WACE,OACE,qCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,QAE3B,eAACH,EAAD,mCAnBU,SAmBV,W,gBCXSI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5998cb78.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\n\ninterface MovieListProps {\n  list: Movie[];\n}\n\nexport interface Movie {\n  [key: string]: string;\n}\n\nconst MovieListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  width: calc(100% - 4rem);\n  padding: 2rem;\n\n  @media (min-width: 600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst MovieBlock = styled.div`\n  position: relative;\n  background-color: #333;\n  color: #fff;\n  margin: .75rem;\n  width: 200px;\n  height: 280px;\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n\n  &:hover {\n    box-shadow: 0 0 1rem 1rem rgba(255, 0, 0, .3);\n  }\n`;\n\nconst MovieTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n\n  background-color: rgba(40, 0, 0, .75);\n  width: 100%;\n  padding: 1rem;\n  margin: 0;\n`;\n\nconst MovieList = ({ list = [] }: MovieListProps) => (\n  <MovieListWrapper>\n    {list.map((movie: Movie): ReactElement => (\n      <MovieBlock key={movie.imdbID}>\n        {movie.Poster && <img src={movie.Poster} alt=\"\" />}\n        <MovieTitle>{movie.Title}</MovieTitle>\n      </MovieBlock>\n    ))}\n  </MovieListWrapper>\n);\n\nexport default MovieList;","import React, { useEffect, useState, useRef, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { MdSearch } from 'react-icons/md';\n\nimport MovieList, { Movie } from './MovieList';\n\nconst omdbApiKey = 'bce2b2d3';\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #500;\n  color: #fff;\n  padding: 0;\n`;\n\nconst SearchBar = styled.div`\n  width: 100%;\n  margin: 1rem 1.5rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchInput = styled.input`\n  width: calc(100% - 50px);\n  border: 0;\n  border-radius: 0;\n  background-color: #800;\n  padding: 0.5rem;\n  color: #fff;\n\n  &:focus {\n    outline: 0 !important;\n  }\n`;\n\nconst SearchButton = styled.button`\n  background-color: #a00;\n  border: 0;\n  border-radius: 0;\n  padding: 0.45rem;\n  color: white;\n`;\n\nconst PlayListButton = styled.button`\n  background-color: #a00;\n  color: white;\n  border: 0;\n  border-radius: 0;\n  padding: 1.5rem;\n  width: 8rem;\n\n  &:hover,\n  &:focus {\n    background-color: #c00;\n    outline: 0 !important;\n  }\n`;\n\nconst SearchPage = () => {\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  const [search, setSearch] = useState<{ keyword: string, page: number }>({ keyword: 'aaa', page: 1 });\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  useEffect(() => {\n    axios(`https://www.omdbapi.com/?s=${search.keyword}&apikey=${omdbApiKey}&page=${search.page}`)\n      .then(({ data }) => {\n        setMovies(data.Search);\n      });\n  }, [search]);\n\n  const searchMovie = () => {\n    setSearch({ keyword: (searchInput.current as HTMLInputElement)?.value, page: 1 })\n  };\n\n  const searchMovieByEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      setSearch({ keyword: (e.target as HTMLInputElement).value, page: 1 })\n    }\n  };\n\n  return (\n      <>\n        <TitleBar>\n          <PlayListButton>\n            My playlist\n          </PlayListButton>\n\n          <SearchBar>\n            <SearchInput ref={searchInput} onKeyPress={searchMovieByEnter} aria-label=\"Enter keyword\" />\n            <SearchButton onClick={searchMovie} aria-label=\"Search\">\n              <MdSearch />\n            </SearchButton>\n          </SearchBar>\n        </TitleBar>\n\n        <MovieList list={movies} />\n      </>\n  );\n};\n\nexport default SearchPage;","import React from 'react';\nimport styled from 'styled-components';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport SearchPage from './components/SearchPage';\n\nconst myColor = 'orange';\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  background-color: #600;\n  color: #faa;\n  width: 100%;\n  margin: 0;\n  padding: 0.5rem;\n`;\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<SearchPage />} />\n      </Routes>\n      <Footer>\n        My favorite color is {myColor}.\n      </Footer>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}