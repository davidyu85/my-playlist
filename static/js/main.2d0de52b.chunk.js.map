{"version":3,"sources":["components/MovieList.tsx","components/SearchPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MovieListWrapper","styled","div","MovieBlock","MovieList","list","map","movie","Title","imdbID","omdbApiKey","TitleBar","Search","input","SearchPage","useState","keyword","page","search","movies","setMovies","setTotal","useEffect","axios","then","data","totalResults","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAWMA,EAAmBC,IAAOC,IAAV,kGAMhBC,EAAaF,IAAOC,IAAV,8BAcDE,EAVG,SAAC,GAAD,QAAGC,YAAH,MAAU,GAAV,SAChB,cAACL,EAAD,UACGK,EAAKC,KAAI,SAACC,GAAD,OACR,cAACJ,EAAD,UACGI,EAAMC,OADQD,EAAME,cClBvBC,EAAa,WAEbC,EAAWV,IAAOC,IAAV,kGAMRU,EAASX,IAAOY,MAAV,8BA+BGC,EAzBI,WAAO,IAAD,EACKC,mBAA4C,CAAEC,QAAS,MAAOC,KAAM,IADzE,mBAChBC,EADgB,aAEKH,mBAAkB,KAFvB,mBAEhBI,EAFgB,KAERC,EAFQ,OAGGL,mBAAS,GAHZ,mBAGTM,GAHS,WAavB,OARAC,qBAAU,WACRC,IAAM,8BAAD,OAA+BL,EAAOF,QAAtC,mBAAwDN,EAAxD,iBAA2EQ,EAAOD,OACpFO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPL,EAAUK,EAAKb,QACfS,EAASI,EAAKC,mBAEjB,CAACR,IAGA,qCACE,eAACP,EAAD,WACE,wCACA,cAACC,EAAD,OAGF,cAAC,EAAD,CAAWP,KAAMc,QC3BVQ,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,S,QCMhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d0de52b.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\n\ninterface MovieListProps {\n  list: Movie[];\n}\n\nexport interface Movie {\n  [key: string]: string;\n}\n\nconst MovieListWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MovieBlock = styled.div`\n\n`;\n\nconst MovieList = ({ list = [] }: MovieListProps) => (\n  <MovieListWrapper>\n    {list.map((movie: Movie): ReactElement => (\n      <MovieBlock key={movie.imdbID}>\n        {movie.Title}\n      </MovieBlock>\n    ))}\n  </MovieListWrapper>\n);\n\nexport default MovieList;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport MovieList, { Movie } from './MovieList';\n\nconst omdbApiKey = 'bce2b2d3';\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Search = styled.input`\n\n`;\n\nconst callForMovies = (keyword: string, page: number) => axios(`https://www.omdbapi.com/?s=${keyword}&apikey=${omdbApiKey}&page=${page}`)\n\nconst SearchPage = () => {\n  const [search, setSearch] = useState<{ keyword: string, page: number }>({ keyword: 'aaa', page: 1 });\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    axios(`https://www.omdbapi.com/?s=${search.keyword}&apikey=${omdbApiKey}&page=${search.page}`)\n      .then(({ data }) => {\n        setMovies(data.Search);\n        setTotal(data.totalResults);\n      });\n  }, [search]);\n\n  return (\n      <>\n        <TitleBar>\n          <h3>Search</h3>\n          <Search />\n        </TitleBar>\n\n        <MovieList list={movies} />\n      </>\n  );\n};\n\nexport default SearchPage;","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport SearchPage from './components/SearchPage';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<SearchPage />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}